---
title: "Version, deploy, and monitor your model with vetiver in R"
---

## The MLOps cycle

![](https://vetiver.rstudio.com/images/ml_ops_cycle.png)

Data scientists have effective tools that they ‚ù§Ô∏è to:

-   collect data

-   prepare, manipulate, refine data

-   train models

There is a lack üò© of effective tools (especially open source) to:

-   put models into production

-   monitor model performance

-   trigger retraining

## What is vetiver? <https://vetiver.rstudio.com/>

> *Vetiver, the oil of tranquility, is used as a stabilizing ingredient in perfumery to preserve more volatile fragrances.*

The **goal** of vetiver is to provide fluent tooling to **version, deploy, and monitor** a trained model.

## Build a model

Data scientists use tools they love for these steps, like the tidyverse, pandas, tidymodels, scikit-learn, etc.

## Version and deploy a model

Create a deployable model object:


```{r}
library(tidymodels)

car_mod <-
    workflow(mpg ~ ., linear_reg()) %>%
    fit(mtcars)
```

```{r}
library(vetiver)
v <- vetiver_model(car_mod, "cars_mpg")
v
```

Or view stored models:

```{r}
library(vetiver)
library(pins)

board <- board_rsconnect()

board %>% 
  pin_versions("julia.silge/seattle_rf")
```
```{r}
v <- vetiver_pin_read(board, "julia.silge/seattle_rf", version = 58422)
```

Document the model: <https://vetiver.rstudio.com/learn-more/model-card.html>

Deploy model as a REST API:

```{r}
library(plumber)
pr() %>%
  vetiver_api(v, debug = TRUE)
```

-   Deploy to Connect: <https://rstudio.github.io/vetiver-r/dev/reference/vetiver_deploy_rsconnect.html>

-   Deploy via Docker (after creating plumber file via `vetiver_write_plumber(model_board, "julia.silge/scooby-doo")`):

## Predict from a model

Predict for remote vetiver model:

```{r}
seattle_endpoint <- vetiver_endpoint("https://colorado.rstudio.com/rsc/seattle-housing/predict")
```

```{r}
library(arrow)
new_houses <- read_feather("seattle.arrow")

predict(seattle_endpoint, new_houses)
```

## Monitor your model

To monitor the statistical properties of your model over time, you will need new data with labels. We can compute multiple metrics at once over a certain time aggregation.

### How does a model use time? ü§î

-   Your model **sometimes** uses date-time quantities as features for prediction (like these Scooby Doo episodes!).
-   Monitoring **always** involves a date-time quantity, not necessarily as a feature, but as a dimension along which you are monitoring.


```{r}
vetiver_dashboard()
```


Check out a [more realistic monitoring](https://colorado.rstudio.com/rsc/seattle-housing-dashboard/) example that uses the dashboard template in vetiver!
